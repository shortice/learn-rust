/*
Итак, в traits_rusti.rs я уже сказал про срок жизни ссылок в
Rust. 

Процитирую еще раз тут:
    // Что это тут за кракозябра <'_>?
    // А это время жизни ссылки в Rust...
    // ' - время жизни
    // _ - время жизни определяется компилятором Rust на
    // основе данных, которые у него есть.

Ни черта не ясно, что же за 'a и 'b времена жизни ссылок.
Единственно ясно про 'static, это как в C/C++, время жизни
ссылки тут будет ровно столько, сколько будет запущена программа.

EDIT: стопэна, ясна, смотрите снизу
*/

pub fn the_time() {
    let string1 = String::from("abcd");
    let string2 = "xyz";

    let result = longest(string1.as_str(), string2);
    println!("The longest string is {result}");
}

/*
Итак. Сейчас мозги тут взорвутся от того, что за еще одна кракозябра
'a. 

Короче, a не несет НИКАКОЙ полезной информации нам, как программисту.
Вообще никакой. Она просто нужна, чтобы указать какой срок жизни
будет той или иной ссылки.

' - это время жизни ссылки. 
a - ЭТО МЕТКА времени жизни ссылки, которая связывает ОТДЕЛЬНЫЕ
переменные. 

В данном случае мы говорим КОМПИЛЯТОРУ, что:
Время жизни ссылок с меткой a, а именно:
x, y и возвращаемого значения будут не меньше, чем 
времена жизни ссылок на переменные x и y соотв. 

Фух, надеюсь я все так сказал!
*/
fn longest<'a>(x: &'a str, y: &'a str) -> &'a str {
    if x.len() > y.len() { x } else { y }
}
